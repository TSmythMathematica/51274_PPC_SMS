//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace APITest.DataTransferService {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://firmglobal.com/Confirmit/webservices/8.5/", ConfigurationName="DataTransferService.DataTransferSoap")]
    public interface DataTransferSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://firmglobal.com/Confirmit/webservices/8.5/GetData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataLevel[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataRecord[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        APITest.DataTransferService.TransferResult GetData(string key, APITest.DataTransferService.SurveyDataTransferDefBase dataTransferDef, APITest.DataTransferService.ResponseToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://firmglobal.com/Confirmit/webservices/8.5/GetData", ReplyAction="*")]
        System.Threading.Tasks.Task<APITest.DataTransferService.TransferResult> GetDataAsync(string key, APITest.DataTransferService.SurveyDataTransferDefBase dataTransferDef, APITest.DataTransferService.ResponseToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://firmglobal.com/Confirmit/webservices/8.5/GetDataGeneral", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataLevel[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataRecord[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        APITest.DataTransferService.ConfirmitDataResult GetDataGeneral(string key, APITest.DataTransferService.SurveyDataTransferDefBase dataTransferDef, APITest.DataTransferService.ResponseToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://firmglobal.com/Confirmit/webservices/8.5/GetDataGeneral", ReplyAction="*")]
        System.Threading.Tasks.Task<APITest.DataTransferService.ConfirmitDataResult> GetDataGeneralAsync(string key, APITest.DataTransferService.SurveyDataTransferDefBase dataTransferDef, APITest.DataTransferService.ResponseToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://firmglobal.com/Confirmit/webservices/8.5/GetChangedData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataLevel[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataRecord[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        APITest.DataTransferService.ChangedDataResult GetChangedData(string key, APITest.DataTransferService.SurveyDataTransferDef dataTransferDef, APITest.DataTransferService.ResponseToken token, long lastSynchronizedVersion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://firmglobal.com/Confirmit/webservices/8.5/GetChangedData", ReplyAction="*")]
        System.Threading.Tasks.Task<APITest.DataTransferService.ChangedDataResult> GetChangedDataAsync(string key, APITest.DataTransferService.SurveyDataTransferDef dataTransferDef, APITest.DataTransferService.ResponseToken token, long lastSynchronizedVersion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://firmglobal.com/Confirmit/webservices/8.5/GetRespondents", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataLevel[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataRecord[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        APITest.DataTransferService.RespondentTransferResult GetRespondents(string key, APITest.DataTransferService.RespondentDataTransferDefBase dataTransferDef, APITest.DataTransferService.RespondentToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://firmglobal.com/Confirmit/webservices/8.5/GetRespondents", ReplyAction="*")]
        System.Threading.Tasks.Task<APITest.DataTransferService.RespondentTransferResult> GetRespondentsAsync(string key, APITest.DataTransferService.RespondentDataTransferDefBase dataTransferDef, APITest.DataTransferService.RespondentToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://firmglobal.com/Confirmit/webservices/8.5/GetRespondentsGeneral", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataLevel[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataRecord[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        APITest.DataTransferService.RespondentConfirmitDataResult GetRespondentsGeneral(string key, APITest.DataTransferService.RespondentDataTransferDefBase dataTransferDef, APITest.DataTransferService.RespondentToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://firmglobal.com/Confirmit/webservices/8.5/GetRespondentsGeneral", ReplyAction="*")]
        System.Threading.Tasks.Task<APITest.DataTransferService.RespondentConfirmitDataResult> GetRespondentsGeneralAsync(string key, APITest.DataTransferService.RespondentDataTransferDefBase dataTransferDef, APITest.DataTransferService.RespondentToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://firmglobal.com/Confirmit/webservices/8.5/UpdateData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataLevel[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataRecord[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        APITest.DataTransferService.ErrorMessage[] UpdateData(string key, string projectId, APITest.DataTransferService.DatabaseType databaseType, string uniqueKey, System.Data.DataSet dataSet, bool inTransaction);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://firmglobal.com/Confirmit/webservices/8.5/UpdateData", ReplyAction="*")]
        System.Threading.Tasks.Task<APITest.DataTransferService.ErrorMessage[]> UpdateDataAsync(string key, string projectId, APITest.DataTransferService.DatabaseType databaseType, string uniqueKey, System.Data.DataSet dataSet, bool inTransaction);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://firmglobal.com/Confirmit/webservices/8.5/UpdateDataGeneral", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataLevel[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataRecord[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        APITest.DataTransferService.ErrorMessage[] UpdateDataGeneral(string key, string projectId, APITest.DataTransferService.DatabaseType databaseType, string uniqueKey, APITest.DataTransferService.ConfirmitData data, bool inTransaction);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://firmglobal.com/Confirmit/webservices/8.5/UpdateDataGeneral", ReplyAction="*")]
        System.Threading.Tasks.Task<APITest.DataTransferService.ErrorMessage[]> UpdateDataGeneralAsync(string key, string projectId, APITest.DataTransferService.DatabaseType databaseType, string uniqueKey, APITest.DataTransferService.ConfirmitData data, bool inTransaction);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://firmglobal.com/Confirmit/webservices/8.5/UpdateRespondents", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataLevel[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataRecord[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        APITest.DataTransferService.ErrorMessage[] UpdateRespondents(string key, string projectId, string uniqueKey, System.Data.DataSet ds, bool inTransaction);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://firmglobal.com/Confirmit/webservices/8.5/UpdateRespondents", ReplyAction="*")]
        System.Threading.Tasks.Task<APITest.DataTransferService.ErrorMessage[]> UpdateRespondentsAsync(string key, string projectId, string uniqueKey, System.Data.DataSet ds, bool inTransaction);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://firmglobal.com/Confirmit/webservices/8.5/UpdateRespondentsGeneral", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataLevel[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataRecord[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        APITest.DataTransferService.ErrorMessage[] UpdateRespondentsGeneral(string key, string projectId, string uniqueKey, APITest.DataTransferService.ConfirmitData data, bool inTransaction);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://firmglobal.com/Confirmit/webservices/8.5/UpdateRespondentsGeneral", ReplyAction="*")]
        System.Threading.Tasks.Task<APITest.DataTransferService.ErrorMessage[]> UpdateRespondentsGeneralAsync(string key, string projectId, string uniqueKey, APITest.DataTransferService.ConfirmitData data, bool inTransaction);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://firmglobal.com/Confirmit/webservices/8.5/DeleteData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataLevel[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataRecord[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        int DeleteData(string key, APITest.DataTransferService.SurveyDataTransferDefBase dataTransferDef);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://firmglobal.com/Confirmit/webservices/8.5/DeleteData", ReplyAction="*")]
        System.Threading.Tasks.Task<int> DeleteDataAsync(string key, APITest.DataTransferService.SurveyDataTransferDefBase dataTransferDef);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://firmglobal.com/Confirmit/webservices/8.5/DeleteRespondents", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataLevel[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataRecord[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        int DeleteRespondents(string key, string projectId, string filterExpression);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://firmglobal.com/Confirmit/webservices/8.5/DeleteRespondents", ReplyAction="*")]
        System.Threading.Tasks.Task<int> DeleteRespondentsAsync(string key, string projectId, string filterExpression);
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SurveyDataTransferDef))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://firmglobal.com/Confirmit/webservices/8.5/")]
    public partial class SurveyDataTransferDefBase : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string projectIdField;
        
        private DatabaseType dbTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ProjectId {
            get {
                return this.projectIdField;
            }
            set {
                this.projectIdField = value;
                this.RaisePropertyChanged("ProjectId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public DatabaseType DbType {
            get {
                return this.dbTypeField;
            }
            set {
                this.dbTypeField = value;
                this.RaisePropertyChanged("DbType");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://firmglobal.com/Confirmit/webservices/8.5/")]
    public enum DatabaseType {
        
        /// <remarks/>
        Production,
        
        /// <remarks/>
        Test,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://firmglobal.com/Confirmit/webservices/8.5/")]
    public partial class ErrorInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string typeField;
        
        private string descriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://firmglobal.com/Confirmit/webservices/8.5/")]
    public partial class ErrorMessage : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ErrorInfo[] errorInfoElementsField;
        
        private string tableField;
        
        private string rowField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public ErrorInfo[] ErrorInfoElements {
            get {
                return this.errorInfoElementsField;
            }
            set {
                this.errorInfoElementsField = value;
                this.RaisePropertyChanged("ErrorInfoElements");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Table {
            get {
                return this.tableField;
            }
            set {
                this.tableField = value;
                this.RaisePropertyChanged("Table");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Row {
            get {
                return this.rowField;
            }
            set {
                this.rowField = value;
                this.RaisePropertyChanged("Row");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://firmglobal.com/Confirmit/webservices/8.5/")]
    public partial class RespondentConfirmitDataResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ConfirmitData resultField;
        
        private RespondentToken tokenField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public ConfirmitData Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
                this.RaisePropertyChanged("Result");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public RespondentToken Token {
            get {
                return this.tokenField;
            }
            set {
                this.tokenField = value;
                this.RaisePropertyChanged("Token");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://firmglobal.com/Confirmit/webservices/8.5/")]
    public partial class ConfirmitData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private DataLevel[] dataLevelsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public DataLevel[] DataLevels {
            get {
                return this.dataLevelsField;
            }
            set {
                this.dataLevelsField = value;
                this.RaisePropertyChanged("DataLevels");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://firmglobal.com/Confirmit/webservices/8.5/")]
    public partial class DataLevel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string levelIdField;
        
        private Variable[] variablesField;
        
        private DataRecord[] recordsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string LevelId {
            get {
                return this.levelIdField;
            }
            set {
                this.levelIdField = value;
                this.RaisePropertyChanged("LevelId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public Variable[] Variables {
            get {
                return this.variablesField;
            }
            set {
                this.variablesField = value;
                this.RaisePropertyChanged("Variables");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        public DataRecord[] Records {
            get {
                return this.recordsField;
            }
            set {
                this.recordsField = value;
                this.RaisePropertyChanged("Records");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://firmglobal.com/Confirmit/webservices/8.5/")]
    public partial class Variable : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nameField;
        
        private VariableType typeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public VariableType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://firmglobal.com/Confirmit/webservices/8.5/")]
    public enum VariableType {
        
        /// <remarks/>
        String,
        
        /// <remarks/>
        Bool,
        
        /// <remarks/>
        DateTime,
        
        /// <remarks/>
        Byte,
        
        /// <remarks/>
        Short,
        
        /// <remarks/>
        Integer,
        
        /// <remarks/>
        Long,
        
        /// <remarks/>
        Numeric,
        
        /// <remarks/>
        Guid,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://firmglobal.com/Confirmit/webservices/8.5/")]
    public partial class DataRecord : object, System.ComponentModel.INotifyPropertyChanged {
        
        private object[] valuesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public object[] Values {
            get {
                return this.valuesField;
            }
            set {
                this.valuesField = value;
                this.RaisePropertyChanged("Values");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://firmglobal.com/Confirmit/webservices/8.5/")]
    public partial class RespondentToken : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Guid idField;
        
        private long lastRespIdReturnedField;
        
        private long firstRespIdReturnedField;
        
        private long numberOfRespondentsReturnedField;
        
        private long datasetsReturnedField;
        
        private bool lastDataSetField;
        
        private string projectIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public System.Guid Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public long LastRespIdReturned {
            get {
                return this.lastRespIdReturnedField;
            }
            set {
                this.lastRespIdReturnedField = value;
                this.RaisePropertyChanged("LastRespIdReturned");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long FirstRespIdReturned {
            get {
                return this.firstRespIdReturnedField;
            }
            set {
                this.firstRespIdReturnedField = value;
                this.RaisePropertyChanged("FirstRespIdReturned");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long NumberOfRespondentsReturned {
            get {
                return this.numberOfRespondentsReturnedField;
            }
            set {
                this.numberOfRespondentsReturnedField = value;
                this.RaisePropertyChanged("NumberOfRespondentsReturned");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public long DatasetsReturned {
            get {
                return this.datasetsReturnedField;
            }
            set {
                this.datasetsReturnedField = value;
                this.RaisePropertyChanged("DatasetsReturned");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public bool LastDataSet {
            get {
                return this.lastDataSetField;
            }
            set {
                this.lastDataSetField = value;
                this.RaisePropertyChanged("LastDataSet");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string ProjectId {
            get {
                return this.projectIdField;
            }
            set {
                this.projectIdField = value;
                this.RaisePropertyChanged("ProjectId");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://firmglobal.com/Confirmit/webservices/8.5/")]
    public partial class RespondentTransferResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Data.DataSet resultField;
        
        private RespondentToken tokenField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public System.Data.DataSet Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
                this.RaisePropertyChanged("Result");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public RespondentToken Token {
            get {
                return this.tokenField;
            }
            set {
                this.tokenField = value;
                this.RaisePropertyChanged("Token");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RespondentDataTransferDef))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://firmglobal.com/Confirmit/webservices/8.5/")]
    public partial class RespondentDataTransferDefBase : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string projectIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ProjectId {
            get {
                return this.projectIdField;
            }
            set {
                this.projectIdField = value;
                this.RaisePropertyChanged("ProjectId");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://firmglobal.com/Confirmit/webservices/8.5/")]
    public partial class RespondentDataTransferDef : RespondentDataTransferDefBase {
        
        private string[] fieldNamesField;
        
        private string expressionField;
        
        private bool generateSurveyLinkField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public string[] FieldNames {
            get {
                return this.fieldNamesField;
            }
            set {
                this.fieldNamesField = value;
                this.RaisePropertyChanged("FieldNames");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Expression {
            get {
                return this.expressionField;
            }
            set {
                this.expressionField = value;
                this.RaisePropertyChanged("Expression");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool GenerateSurveyLink {
            get {
                return this.generateSurveyLinkField;
            }
            set {
                this.generateSurveyLinkField = value;
                this.RaisePropertyChanged("GenerateSurveyLink");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://firmglobal.com/Confirmit/webservices/8.5/")]
    public partial class DataCell : object, System.ComponentModel.INotifyPropertyChanged {
        
        private object valueField;
        
        private string nameField;
        
        private VariableType typeField;
        
        private bool isNullField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public object Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public VariableType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsNull {
            get {
                return this.isNullField;
            }
            set {
                this.isNullField = value;
                this.RaisePropertyChanged("IsNull");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://firmglobal.com/Confirmit/webservices/8.5/")]
    public partial class ChangedDataRecord : object, System.ComponentModel.INotifyPropertyChanged {
        
        private DataCell[] valuesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public DataCell[] Values {
            get {
                return this.valuesField;
            }
            set {
                this.valuesField = value;
                this.RaisePropertyChanged("Values");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://firmglobal.com/Confirmit/webservices/8.5/")]
    public partial class ChangedDataLevel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ChangedDataRecord[] recordsField;
        
        private string levelIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public ChangedDataRecord[] Records {
            get {
                return this.recordsField;
            }
            set {
                this.recordsField = value;
                this.RaisePropertyChanged("Records");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string LevelId {
            get {
                return this.levelIdField;
            }
            set {
                this.levelIdField = value;
                this.RaisePropertyChanged("LevelId");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://firmglobal.com/Confirmit/webservices/8.5/")]
    public partial class ChangedData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ChangedDataLevel[] levelsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public ChangedDataLevel[] Levels {
            get {
                return this.levelsField;
            }
            set {
                this.levelsField = value;
                this.RaisePropertyChanged("Levels");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://firmglobal.com/Confirmit/webservices/8.5/")]
    public partial class ChangedDataResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ChangedData resultField;
        
        private ResponseToken responseTokenField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public ChangedData Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
                this.RaisePropertyChanged("Result");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public ResponseToken ResponseToken {
            get {
                return this.responseTokenField;
            }
            set {
                this.responseTokenField = value;
                this.RaisePropertyChanged("ResponseToken");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://firmglobal.com/Confirmit/webservices/8.5/")]
    public partial class ResponseToken : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Guid idField;
        
        private long lastResponseIdReturnedField;
        
        private long firstResponseIdReturnedField;
        
        private long numberOfResponsesReturnedField;
        
        private long datasetsReturnedField;
        
        private bool lastDataSetField;
        
        private string projectIdField;
        
        private long changeTrackingVersionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public System.Guid Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public long LastResponseIdReturned {
            get {
                return this.lastResponseIdReturnedField;
            }
            set {
                this.lastResponseIdReturnedField = value;
                this.RaisePropertyChanged("LastResponseIdReturned");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long FirstResponseIdReturned {
            get {
                return this.firstResponseIdReturnedField;
            }
            set {
                this.firstResponseIdReturnedField = value;
                this.RaisePropertyChanged("FirstResponseIdReturned");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long NumberOfResponsesReturned {
            get {
                return this.numberOfResponsesReturnedField;
            }
            set {
                this.numberOfResponsesReturnedField = value;
                this.RaisePropertyChanged("NumberOfResponsesReturned");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public long DatasetsReturned {
            get {
                return this.datasetsReturnedField;
            }
            set {
                this.datasetsReturnedField = value;
                this.RaisePropertyChanged("DatasetsReturned");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public bool LastDataSet {
            get {
                return this.lastDataSetField;
            }
            set {
                this.lastDataSetField = value;
                this.RaisePropertyChanged("LastDataSet");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string ProjectId {
            get {
                return this.projectIdField;
            }
            set {
                this.projectIdField = value;
                this.RaisePropertyChanged("ProjectId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public long ChangeTrackingVersion {
            get {
                return this.changeTrackingVersionField;
            }
            set {
                this.changeTrackingVersionField = value;
                this.RaisePropertyChanged("ChangeTrackingVersion");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://firmglobal.com/Confirmit/webservices/8.5/")]
    public partial class ConfirmitDataResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ConfirmitData resultField;
        
        private ResponseToken responseTokenField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public ConfirmitData Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
                this.RaisePropertyChanged("Result");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public ResponseToken ResponseToken {
            get {
                return this.responseTokenField;
            }
            set {
                this.responseTokenField = value;
                this.RaisePropertyChanged("ResponseToken");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://firmglobal.com/Confirmit/webservices/8.5/")]
    public partial class TransferResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Data.DataSet resultField;
        
        private ResponseToken responseTokenField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public System.Data.DataSet Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
                this.RaisePropertyChanged("Result");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public ResponseToken ResponseToken {
            get {
                return this.responseTokenField;
            }
            set {
                this.responseTokenField = value;
                this.RaisePropertyChanged("ResponseToken");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://firmglobal.com/Confirmit/webservices/8.5/")]
    public partial class TransferVariableCollection : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string loopIdField;
        
        private string[] variableNamesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string LoopId {
            get {
                return this.loopIdField;
            }
            set {
                this.loopIdField = value;
                this.RaisePropertyChanged("LoopId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public string[] VariableNames {
            get {
                return this.variableNamesField;
            }
            set {
                this.variableNamesField = value;
                this.RaisePropertyChanged("VariableNames");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://firmglobal.com/Confirmit/webservices/8.5/")]
    public partial class SurveyDataTransferDef : SurveyDataTransferDefBase {
        
        private string transferKeyField;
        
        private TransferVariableCollection[] variableCollectionsField;
        
        private string filterExpressionField;
        
        private bool includeSystemVariablesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string TransferKey {
            get {
                return this.transferKeyField;
            }
            set {
                this.transferKeyField = value;
                this.RaisePropertyChanged("TransferKey");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public TransferVariableCollection[] VariableCollections {
            get {
                return this.variableCollectionsField;
            }
            set {
                this.variableCollectionsField = value;
                this.RaisePropertyChanged("VariableCollections");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string FilterExpression {
            get {
                return this.filterExpressionField;
            }
            set {
                this.filterExpressionField = value;
                this.RaisePropertyChanged("FilterExpression");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool IncludeSystemVariables {
            get {
                return this.includeSystemVariablesField;
            }
            set {
                this.includeSystemVariablesField = value;
                this.RaisePropertyChanged("IncludeSystemVariables");
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface DataTransferSoapChannel : APITest.DataTransferService.DataTransferSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataTransferSoapClient : System.ServiceModel.ClientBase<APITest.DataTransferService.DataTransferSoap>, APITest.DataTransferService.DataTransferSoap {
        
        public DataTransferSoapClient() {
        }
        
        public DataTransferSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DataTransferSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataTransferSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataTransferSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public APITest.DataTransferService.TransferResult GetData(string key, APITest.DataTransferService.SurveyDataTransferDefBase dataTransferDef, APITest.DataTransferService.ResponseToken token) {
            return base.Channel.GetData(key, dataTransferDef, token);
        }
        
        public System.Threading.Tasks.Task<APITest.DataTransferService.TransferResult> GetDataAsync(string key, APITest.DataTransferService.SurveyDataTransferDefBase dataTransferDef, APITest.DataTransferService.ResponseToken token) {
            return base.Channel.GetDataAsync(key, dataTransferDef, token);
        }
        
        public APITest.DataTransferService.ConfirmitDataResult GetDataGeneral(string key, APITest.DataTransferService.SurveyDataTransferDefBase dataTransferDef, APITest.DataTransferService.ResponseToken token) {
            return base.Channel.GetDataGeneral(key, dataTransferDef, token);
        }
        
        public System.Threading.Tasks.Task<APITest.DataTransferService.ConfirmitDataResult> GetDataGeneralAsync(string key, APITest.DataTransferService.SurveyDataTransferDefBase dataTransferDef, APITest.DataTransferService.ResponseToken token) {
            return base.Channel.GetDataGeneralAsync(key, dataTransferDef, token);
        }
        
        public APITest.DataTransferService.ChangedDataResult GetChangedData(string key, APITest.DataTransferService.SurveyDataTransferDef dataTransferDef, APITest.DataTransferService.ResponseToken token, long lastSynchronizedVersion) {
            return base.Channel.GetChangedData(key, dataTransferDef, token, lastSynchronizedVersion);
        }
        
        public System.Threading.Tasks.Task<APITest.DataTransferService.ChangedDataResult> GetChangedDataAsync(string key, APITest.DataTransferService.SurveyDataTransferDef dataTransferDef, APITest.DataTransferService.ResponseToken token, long lastSynchronizedVersion) {
            return base.Channel.GetChangedDataAsync(key, dataTransferDef, token, lastSynchronizedVersion);
        }
        
        public APITest.DataTransferService.RespondentTransferResult GetRespondents(string key, APITest.DataTransferService.RespondentDataTransferDefBase dataTransferDef, APITest.DataTransferService.RespondentToken token) {
            return base.Channel.GetRespondents(key, dataTransferDef, token);
        }
        
        public System.Threading.Tasks.Task<APITest.DataTransferService.RespondentTransferResult> GetRespondentsAsync(string key, APITest.DataTransferService.RespondentDataTransferDefBase dataTransferDef, APITest.DataTransferService.RespondentToken token) {
            return base.Channel.GetRespondentsAsync(key, dataTransferDef, token);
        }
        
        public APITest.DataTransferService.RespondentConfirmitDataResult GetRespondentsGeneral(string key, APITest.DataTransferService.RespondentDataTransferDefBase dataTransferDef, APITest.DataTransferService.RespondentToken token) {
            return base.Channel.GetRespondentsGeneral(key, dataTransferDef, token);
        }
        
        public System.Threading.Tasks.Task<APITest.DataTransferService.RespondentConfirmitDataResult> GetRespondentsGeneralAsync(string key, APITest.DataTransferService.RespondentDataTransferDefBase dataTransferDef, APITest.DataTransferService.RespondentToken token) {
            return base.Channel.GetRespondentsGeneralAsync(key, dataTransferDef, token);
        }
        
        public APITest.DataTransferService.ErrorMessage[] UpdateData(string key, string projectId, APITest.DataTransferService.DatabaseType databaseType, string uniqueKey, System.Data.DataSet dataSet, bool inTransaction) {
            return base.Channel.UpdateData(key, projectId, databaseType, uniqueKey, dataSet, inTransaction);
        }
        
        public System.Threading.Tasks.Task<APITest.DataTransferService.ErrorMessage[]> UpdateDataAsync(string key, string projectId, APITest.DataTransferService.DatabaseType databaseType, string uniqueKey, System.Data.DataSet dataSet, bool inTransaction) {
            return base.Channel.UpdateDataAsync(key, projectId, databaseType, uniqueKey, dataSet, inTransaction);
        }
        
        public APITest.DataTransferService.ErrorMessage[] UpdateDataGeneral(string key, string projectId, APITest.DataTransferService.DatabaseType databaseType, string uniqueKey, APITest.DataTransferService.ConfirmitData data, bool inTransaction) {
            return base.Channel.UpdateDataGeneral(key, projectId, databaseType, uniqueKey, data, inTransaction);
        }
        
        public System.Threading.Tasks.Task<APITest.DataTransferService.ErrorMessage[]> UpdateDataGeneralAsync(string key, string projectId, APITest.DataTransferService.DatabaseType databaseType, string uniqueKey, APITest.DataTransferService.ConfirmitData data, bool inTransaction) {
            return base.Channel.UpdateDataGeneralAsync(key, projectId, databaseType, uniqueKey, data, inTransaction);
        }
        
        public APITest.DataTransferService.ErrorMessage[] UpdateRespondents(string key, string projectId, string uniqueKey, System.Data.DataSet ds, bool inTransaction) {
            return base.Channel.UpdateRespondents(key, projectId, uniqueKey, ds, inTransaction);
        }
        
        public System.Threading.Tasks.Task<APITest.DataTransferService.ErrorMessage[]> UpdateRespondentsAsync(string key, string projectId, string uniqueKey, System.Data.DataSet ds, bool inTransaction) {
            return base.Channel.UpdateRespondentsAsync(key, projectId, uniqueKey, ds, inTransaction);
        }
        
        public APITest.DataTransferService.ErrorMessage[] UpdateRespondentsGeneral(string key, string projectId, string uniqueKey, APITest.DataTransferService.ConfirmitData data, bool inTransaction) {
            return base.Channel.UpdateRespondentsGeneral(key, projectId, uniqueKey, data, inTransaction);
        }
        
        public System.Threading.Tasks.Task<APITest.DataTransferService.ErrorMessage[]> UpdateRespondentsGeneralAsync(string key, string projectId, string uniqueKey, APITest.DataTransferService.ConfirmitData data, bool inTransaction) {
            return base.Channel.UpdateRespondentsGeneralAsync(key, projectId, uniqueKey, data, inTransaction);
        }
        
        public int DeleteData(string key, APITest.DataTransferService.SurveyDataTransferDefBase dataTransferDef) {
            return base.Channel.DeleteData(key, dataTransferDef);
        }
        
        public System.Threading.Tasks.Task<int> DeleteDataAsync(string key, APITest.DataTransferService.SurveyDataTransferDefBase dataTransferDef) {
            return base.Channel.DeleteDataAsync(key, dataTransferDef);
        }
        
        public int DeleteRespondents(string key, string projectId, string filterExpression) {
            return base.Channel.DeleteRespondents(key, projectId, filterExpression);
        }
        
        public System.Threading.Tasks.Task<int> DeleteRespondentsAsync(string key, string projectId, string filterExpression) {
            return base.Channel.DeleteRespondentsAsync(key, projectId, filterExpression);
        }
    }
}
